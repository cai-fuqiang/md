#!/bin/sh
CUR_KVER=`uname -r`
RESTORE_KERNEL_PATH=/root/escloud_image_backup

kver_before_611()
{
        local KVER=$1
        if [ "$(echo $KVER |grep -E '4.18.0-147.5.1.es8_|4.18.0-372')" == "" ];then
                return 1
        else
		return 0
        fi
}

kver_before_el8()
{
        if [ "$(echo $KVER |grep -E '4.18.0-147|4.18.0-372')"  == "" ];then
                return 1
        else
                return 0
        fi
}

kver_after_611_numa64()
{
	local KVER=$1

	echo $KVER|grep '+numa64' > /dev/null

	if [ $? -eq 0 ];then
		return 1
	else
		return 0
	fi
}

get_rpm_name_by_kver()
{
	local KVER=$1
	kver_before_el8 $KVER

	if [ $? -eq 1 ];then
		echo kernel-$KVER
		return
	fi

	kver_after_611_numa64 $KVER

	if [ $? -eq 1 ];then
		echo kernel-numa64-core-${KVER%*+numa64}
		return
	fi

	echo kernel-core-$KVER
}

rpm_remove()
{
        local KVER=$1

	local rpm_package_name=$(get_rpm_name_by_kver $KVER)

	echo KVER is $1, remove rpm package $rpm_package_name

	yum remove -y $rpm_package_name


	if [ $? -eq 0 ];then
		echo remove rpm pkg $rpm_package_name success
	else
		echo remove rpm pkg $rpm_package_name FAILED, will direct remove
		direct_mv  $KVER
	fi
}

direct_mv()
{
        local KVER=$1
        RESTORE_PATH=$RESTORE_KERNEL_PATH/$KVER
        echo direct remove kernel $KVER to $RESTORE_PATH
        mkdir -p $RESTORE_PATH
        mv /boot/*$KVER* $RESTORE_PATH
}

remove_kernel()
{
        local KVER=$1

	echo remove kernel $KVER

	kver_before_611 $CUR_KVER

	if [[ $? -eq 1 ]];then
                rpm_remove $KVER
		return
	fi

	kver_before_611 $KVER
        if [[ $? -eq 0 ]];then
		echo $kver=== $KVER
                rpm_remove $KVER
        else
                direct_mv $KVER
        fi
}

get_kernel_num()
{
        cd /boot
        ls vmlinuz-* |grep -v rescue |wc -l
        cd - > /dev/null
}

delete_kdump_initramfs()
{
	rm -f /boot/initramfs-*kdump.img
}

main()
{
	echo "delete kdump initrd"
	delete_kdump_initramfs
	KERNEL_NUM=$(get_kernel_num)
	if [[ $KERNEL_NUM -eq 1 ]];then
                echo boot space is enough, need not remove any kernel
                exit
        fi
        echo the number of kernel is $KERNEL_NUM, need  remove to keep number to 1

        cd /boot

        for VMLINUZ_KVER in `ls vmlinuz-* |grep -v rescue |grep -v $CUR_KVER`
        do
                remove_kernel ${VMLINUZ_KVER#vmlinuz-}
        done

        cd - > /dev/null
}

main
